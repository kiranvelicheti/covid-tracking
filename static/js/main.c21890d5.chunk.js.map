{"version":3,"sources":["util/StateAbbrevation.js","components/TestStatus.jsx","components/Cummulative.jsx","components/Status.jsx","App.js","serviceWorker.js","index.js"],"names":["stateList","AZ","AL","AK","AR","AS","CA","CO","CT","DC","DE","FL","GA","GU","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MP","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","PR","RI","SC","SD","TN","TX","UT","VT","VA","VI","WA","WV","WI","WY","getStateFullName","abbrevation","useStyles","makeStyles","table","minWidth","expandedPanel","justifyContent","backgroundColor","borderBottom","marginBottom","minHeight","StyledTableCell","withStyles","theme","head","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","background","default","TableRow","TestStatus","classes","useState","statesMap","setStatesMap","headers","useEffect","fetch","then","response","json","statesData","_","groupBy","keysIn","map","date","states","ExpansionPanel","ExpansionPanelSummary","id","className","split","ExpansionPanelDetails","TableContainer","component","Paper","Table","aria-label","TableHead","header","align","TableBody","state","key","positive","negative","pending","death","Cummulative","setStatesData","data","total","TabPanel","props","children","value","index","other","Typography","role","hidden","aria-labelledby","Box","p","a11yProps","flexGrow","paper","width","Status","React","setValue","Grid","container","item","xs","sm","variant","style","AppBar","position","Tabs","onChange","event","newValue","Tab","label","createMuiTheme","primary","main","text","disabled","shape","borderRadius","typography","button","textTransform","fontFamily","subtitle2","fontWeight","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c21890d5.chunk.js","sourcesContent":["const stateList = {\n  AZ: \"Arizona\",\n  AL: \"Alabama\",\n  AK: \"Alaska\",\n  AR: \"Arkansas\",\n  AS: \"American Samoa\",\n  CA: \"California\",\n  CO: \"Colorado\",\n  CT: \"Connecticut\",\n  DC: \"District of Columbia\",\n  DE: \"Delaware\",\n  FL: \"Florida\",\n  GA: \"Georgia\",\n  GU: \"Guam\",\n  HI: \"Hawaii\",\n  ID: \"Idaho\",\n  IL: \"Illinois\",\n  IN: \"Indiana\",\n  IA: \"Iowa\",\n  KS: \"Kansas\",\n  KY: \"Kentucky\",\n  LA: \"Louisiana\",\n  ME: \"Maine\",\n  MD: \"Maryland\",\n  MA: \"Massachusetts\",\n  MI: \"Michigan\",\n  MN: \"Minnesota\",\n  MS: \"Mississippi\",\n  MO: \"Missouri\",\n  MP: \"Northern Mariana Islands\",\n  MT: \"Montana\",\n  NE: \"Nebraska\",\n  NV: \"Nevada\",\n  NH: \"New Hampshire\",\n  NJ: \"New Jersey\",\n  NM: \"New Mexico\",\n  NY: \"New York\",\n  NC: \"North Carolina\",\n  ND: \"North Dakota\",\n  OH: \"Ohio\",\n  OK: \"Oklahoma\",\n  OR: \"Oregon\",\n  PA: \"Pennsylvania\",\n  PR: \"Puerto Rico\",\n  RI: \"Rhode Island\",\n  SC: \"South Carolina\",\n  SD: \"South Dakota\",\n  TN: \"Tennessee\",\n  TX: \"Texas\",\n  UT: \"Utah\",\n  VT: \"Vermont\",\n  VA: \"Virginia\",\n  VI: \"Virgin Islands\",\n  WA: \"Washington\",\n  WV: \"West Virginia\",\n  WI: \"Wisconsin\",\n  WY: \"Wyoming\"\n};\n\nexport const getStateFullName = abbrevation => {\n  return stateList[abbrevation];\n};\n","import React, { useEffect, useState } from \"react\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { getStateFullName } from \"../util/StateAbbrevation\";\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from \"@material-ui/core\";\nimport _ from \"lodash\";\n\nconst getDailyStatus = () => {\n    return fetch(\"https://covidtracking.com/api/states/daily\").then(response => response.json());\n};\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: \"100vh\",\n    },\n    expandedPanel: {\n        justifyContent: \"center\",\n        backgroundColor: \"rgba(0, 0, 0, .03)\",\n        borderBottom: \"1px solid rgba(0, 0, 0, .125)\",\n        marginBottom: -1,\n        minHeight: 56,\n        \"&$expanded\": {\n            minHeight: 56\n        },\n    }\n});\n\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n\n\nconst TestStatus = () => {\n    const classes = useStyles();\n    const [statesMap, setStatesMap] = useState([]);\n\n    const headers = [\"State\", \"Positive\", \"Positive\", \"Pending\", \"Death\"]\n    useEffect(() => {\n        getDailyStatus().then(statesData => {\n            setStatesMap(_.groupBy(statesData, \"dateChecked\"));\n        });\n    }, []);\n\n    return (\n        _.keysIn(statesMap)\n            .map(date => {\n                var states = statesMap[date];\n                return <div>\n                    <ExpansionPanel>\n                        <ExpansionPanelSummary id={date} className={classes.expandedPanel}>{_.split(date, 'T', 1)}</ExpansionPanelSummary>\n                        <ExpansionPanelDetails>\n                            <TableContainer component={Paper}>\n                                <Table className={classes.table} aria-label=\"customized table\">\n                                    <TableHead>\n                                        <StyledTableRow>\n                                            {headers.map(header => {\n                                                return <StyledTableCell align=\"center\" >{header}</StyledTableCell>\n                                            })}\n                                        </StyledTableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {states.map(state => (\n                                            <StyledTableRow key={state.state}>\n                                                <StyledTableCell align=\"center\">{getStateFullName(state.state)}</StyledTableCell>\n                                                <StyledTableCell align=\"center\">{state.positive ? state.positive : 0}</StyledTableCell>\n                                                <StyledTableCell align=\"center\">{state.negative ? state.negative : 0}</StyledTableCell>\n                                                <StyledTableCell align=\"center\">{state.pending ? state.pending : 0}</StyledTableCell>\n                                                <StyledTableCell align=\"center\">{state.death ? state.death : 0}</StyledTableCell>\n                                            </StyledTableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                        </ExpansionPanelDetails>\n                    </ExpansionPanel>\n                </div>\n            })\n    );\n}\nexport default TestStatus;","import React, { useEffect, useState } from \"react\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { getStateFullName } from \"../util/StateAbbrevation\";\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from \"@material-ui/core\";\nimport _ from \"lodash\";\n\nconst getDailyStatus = () => {\n    return fetch(\"https://covidtracking.com/api/states\").then(response => response.json());\n};\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: \"100vh\",\n    },\n    expandedPanel: {\n        justifyContent: \"center\",\n        backgroundColor: \"rgba(0, 0, 0, .03)\",\n        borderBottom: \"1px solid rgba(0, 0, 0, .125)\",\n        marginBottom: -1,\n        minHeight: 56,\n        \"&$expanded\": {\n            minHeight: 56\n        },\n    }\n});\n\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n\n\nconst Cummulative = () => {\n    const classes = useStyles();\n\n    const [statesData, setStatesData] = useState([]);\n\n    useEffect(() => {\n        getDailyStatus().then(data => {\n            setStatesData(data);\n        });\n    }, []);\n\n    return (\n        <div>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"customized table\">\n                    <TableHead>\n                        <StyledTableRow>\n                            <StyledTableCell align=\"center\">State</StyledTableCell>\n                            <StyledTableCell align=\"center\">Positive</StyledTableCell>\n                            <StyledTableCell align=\"center\">Negative</StyledTableCell>\n                            <StyledTableCell align=\"center\">Total</StyledTableCell>\n                            <StyledTableCell align=\"center\">Death</StyledTableCell>\n                        </StyledTableRow>\n                    </TableHead>\n                    <TableBody>\n                        {statesData.map(state => (\n                            <StyledTableRow key={state.state}>\n                                <StyledTableCell align=\"center\">{getStateFullName(state.state)}</StyledTableCell>\n                                <StyledTableCell align=\"center\">{state.positive ? state.positive : 0}</StyledTableCell>\n                                <StyledTableCell align=\"center\">{state.negative ? state.negative : 0}</StyledTableCell>\n                                <StyledTableCell align=\"center\">{state.pending ? state.total : 0}</StyledTableCell>\n                                <StyledTableCell align=\"center\">{state.death ? state.death : 0}</StyledTableCell>\n                            </StyledTableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    );\n}\nexport default Cummulative;","import React, { useEffect, useState } from \"react\";\nimport TestStatus from \"./TestStatus\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Cummulative from \"./Cummulative\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        width: \"100vh\"\n    },\n}));\n\nconst Status = () => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (<div className={classes.root}>\n        <Grid container>\n            <Grid item xs={24} sm={12}>\n                <Typography variant=\"h4\" style={{ justifyContent: \"center\" }}>COVID-19 Tracking</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <AppBar position=\"static\" style={{ width: \"110vh\" }}>\n                    <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                        <Tab label=\"By Date\" {...a11yProps(0)} />\n                        <Tab label=\"By State\" {...a11yProps(1)} />\n                    </Tabs>\n                </AppBar>\n                <TabPanel value={value} index={0}>\n                    <Grid><TestStatus></TestStatus></Grid>\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    <Grid ><Cummulative></Cummulative></Grid>\n                </TabPanel>\n            </Grid>\n        </Grid>\n    </div >);\n}\n\nexport default Status","import React from \"react\";\nimport \"./App.css\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Status from \"./components/Status\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#3A96E8\"\n    },\n    text: {\n      disabled: \"#FFF\"\n    }\n  },\n  shape: {\n    borderRadius: 10\n  },\n  typography: {\n    button: {\n      textTransform: \"none\"\n    },\n    fontFamily: \"'Helvetica', 'Arial', sans-serif, 'Roboto'\",\n    subtitle2: {\n      fontWeight: \"bold\"\n    }\n  }\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Status />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}